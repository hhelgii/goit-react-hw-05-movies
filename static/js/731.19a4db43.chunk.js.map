{"version":3,"file":"static/js/731.19a4db43.chunk.js","mappings":"iRACA,G,QAAA,CAAgB,SAAW,uBAAuB,WAAa,yBAAyB,kBAAoB,gCAAgC,eAAiB,6BAA6B,oBAAsB,kCAAkC,QAAU,wB,SCwE5P,EAjEa,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACd,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uGACOC,EAAAA,EAAAA,IAAuBN,EAAS,WADvC,gBACRE,EADQ,EACRA,KACRC,EAAQD,GAFQ,2CAAH,qDAIfG,GACD,GAAE,CAACL,IAGFE,IACE,iCAgBE,SAAC,KAAD,CACEK,UAAWC,EAAAA,SACXC,QAAS,CAACC,EAAAA,IACVC,cAAe,EAEhBC,WAAY,CAAEC,WAAW,GAL1B,SAOGX,EAAKY,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC1BC,EAAMD,EAAa,kCAAD,OAAmCA,GAAnC,UAAqDE,GAE7E,OACE,UAAC,KAAD,CAAsBb,UAAWC,EAAAA,WAAjC,WACE,iBAAKD,UAAWC,EAAAA,kBAAhB,UACG,KACD,gBACEa,IAAKF,EACLG,IAAKN,EACLT,UAAWC,EAAAA,oBAGf,iBAAKD,UAAWC,EAAAA,eAAhB,WACE,cAAGD,UAAWC,EAAAA,eAAd,SAAmCQ,KACnC,cAAGT,UAAWC,EAAAA,oBAAd,SAAwCS,SAX1BF,EAerB,MAEc,IAAhBb,EAAKqB,SAAgB,cAAGhB,UAAWC,EAAAA,QAAd,SAA2B,wCAIxD,C","sources":["webpack://react-homework-template/./src/components/cast/cast.module.css?44e2","components/cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"cast_castList__UX8mR\",\"castMember\":\"cast_castMember__8311e\",\"castMemberImgWrap\":\"cast_castMemberImgWrap__HYYHI\",\"castMemberInfo\":\"cast_castMemberInfo__nQX-u\",\"castMemberCharacter\":\"cast_castMemberCharacter__vmv09\",\"message\":\"cast_message__+sUjB\"};","import { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { getMovieInfoWithParams } from 'services/api';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Navigation } from 'swiper/modules';\nimport defaultProfile from '../../img/default.png'\nimport 'swiper/css';\nimport css from './cast.module.css';\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    const fetchCast = async () => {\n      const { cast } = await getMovieInfoWithParams(movieId, 'credits');\n      setCast(cast);\n    };\n    fetchCast();\n  }, [movieId]);\n  // console.log(cast);\n  return (\n    cast && (\n      <>\n        {/* <ul className={css.castList}>\n            {cast.map(({ id, name,character, profile_path }) => {\n              return (\n                <li key={id} className={css.castMember}>\n                 <div className={css.castMemberImgWrap}> <img src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt={name} className={css.castMemberImg}/></div>\n                  <div className={css.castMemberInfo}>\n                    <p className={css.castMemberName}>{name}</p>\n                    <p className={css.castMemberCharacter}>{character}</p>\n                  </div>\n                </li>\n              );\n            })}\n        </ul> */}\n\n        \n        <Swiper\n          className={css.castList}\n          modules={[Navigation]}\n          slidesPerView={3}\n         \n         navigation={{ clickable: true }} \n        >\n          {cast.map(({ id, name, character, profile_path }) => {\n            const image=profile_path?`https://image.tmdb.org/t/p/w500${profile_path}`:`${defaultProfile}`\n           \n            return (\n              <SwiperSlide key={id} className={css.castMember}>\n                <div className={css.castMemberImgWrap}>\n                  {' '}\n                  <img\n                    src={image}\n                    alt={name}\n                    className={css.castMemberImg}\n                  />\n                </div>\n                <div className={css.castMemberInfo}>\n                  <p className={css.castMemberName}>{name}</p>\n                  <p className={css.castMemberCharacter}>{character}</p>\n                </div>\n              </SwiperSlide>\n            );\n          })}\n        </Swiper>\n        {cast.length === 0 && <p className={css.message}>We don't have cast for this movie</p>}\n      </>\n    )\n  );\n};\nCast.propTypes = {\n  movieId: propTypes.oneOfType([propTypes.string, propTypes.number]).isRequired,\n};\n\nexport default Cast;\n"],"names":["movieId","useState","cast","setCast","useEffect","fetchCast","getMovieInfoWithParams","className","css","modules","Navigation","slidesPerView","navigation","clickable","map","id","name","character","profile_path","image","defaultProfile","src","alt","length"],"sourceRoot":""}