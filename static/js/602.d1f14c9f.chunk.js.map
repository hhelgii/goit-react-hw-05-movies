{"version":3,"file":"static/js/602.d1f14c9f.chunk.js","mappings":"0OAKMA,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,0BAAN,IAkDrB,UAjDqB,WAAO,IAAD,IACzB,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAapD,OAZAC,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CACA,IAAMS,EAAY,mCAAG,8GAEOC,EAAAA,EAAAA,IAAaV,GAFpB,OAEXW,EAFW,OAGjBZ,EAASY,GAHQ,gDAKjBC,QAAQC,IAAI,KAAMC,SALD,yDAAH,qDAQlBL,GAToB,CAUrB,GAAE,CAACT,IAEFF,IACE,iCACE,SAAC,KAAD,CAAMiB,GAAIX,EAAaY,QAAvB,SAAgC,aAChC,4BACE,gBACEC,IAAG,0CAAqCnB,EAAMoB,aAC9CC,IAAKrB,EAAMsB,SAEb,4BACE,wBAAKtB,EAAMsB,SACX,yBAAG,cAAYtB,EAAMuB,aAAaC,QAAQ,OAC1C,wBAAI,cACJ,uBAAIxB,EAAMyB,kBAId,4BACE,SAAC,KAAD,CAAMR,GAAE,OAAR,SAAkB,UAClB,SAAC,KAAD,CAAMA,GAAE,UAAR,SAAqB,aAErB,SAAC,EAAAS,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACjC,EAAD,CAAMM,QAASA,OAC3C,SAAC,KAAD,CAAO0B,KAAK,UAAUC,SAAS,SAAC/B,EAAD,CAASI,QAASA,gBAO9D,C,uKCtDK4B,EAAQ,mCACRC,EAAS,+BAER,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACaC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uCAAoDD,IADjE,cACGI,EADH,yBAGIA,EAAIC,MAHR,kEAKA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BwB,GAA5B,uFACaH,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BK,EAA/B,oBAA6CN,IAD1D,cACGI,EADH,yBAEIA,EAAIC,MAFR,kEAIA,SAAeE,EAAtB,iDAAO,OAAP,oBAAO,WAAsCD,EAAIE,GAA1C,uFACaL,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BK,EAA/B,YAAqCE,EAArC,oBAAsDR,IADnE,cACGI,EADH,yBAGIA,EAAIC,MAHR,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACaP,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iCAA8CD,EAA9C,kBAA+DU,IAD5E,cACGN,EADH,yBAEIA,EAAIC,MAFR,kE","sources":["pages/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["import { lazy, Suspense } from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { Route, Routes, useLocation, useParams, Link } from 'react-router-dom';\nimport { Loader } from 'components/loader/Loader';\nimport { getMovieInfo } from 'services/api';\nconst Cast = lazy(() => import('../components/cast/Cast'));\nconst Reviews = lazy(() => import('../components/reviews/Reviews'));\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieId = async () => {\n      try {\n        const movieInfo = await getMovieInfo(movieId);\n        setMovie(movieInfo);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMovieId();\n  }, [movieId]);\n  return (\n    movie && (\n      <>\n        <Link to={backLinkHref.current}>Go back</Link>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w342/${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <div>\n            <h2>{movie.title}</h2>\n            <p>User score {movie.vote_average.toFixed(1)}</p>\n            <h4>Overview</h4>\n            <p>{movie.overview}</p>\n          </div>\n        </div>\n\n        <div>\n          <Link to={`cast`}>Cast</Link>\n          <Link to={`reviews`}>Reviews</Link>\n\n          <Suspense fallback={<Loader />}>\n            <Routes>\n              <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n              <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n            </Routes>\n          </Suspense>\n        </div>\n      </>\n    )\n  );\n};\nexport default MovieDetails;\n","import axios from \"axios\";\nconst API_KEY='41b8f9437bf3f899281f8a3f9bdc0891'\nconst BASE_URL='https://api.themoviedb.org/3'\n\nexport async function getTrending(){\n    const res=await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    \n    return res.data\n}\nexport async function getMovieInfo(id){\n    const res=await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`)\n    return res.data\n}\nexport async function getMovieInfoWithParams(id, param){\n    const res=await axios.get(`${BASE_URL}/movie/${id}/${param}?api_key=${API_KEY}`)\n    \n    return res.data\n    \n}\nexport async function getSearchMovie(query){\n    const res=await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`)\n    return res.data\n\n}"],"names":["Cast","lazy","Reviews","useState","movie","setMovie","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchMovieId","getMovieInfo","movieInfo","console","log","message","to","current","src","poster_path","alt","title","vote_average","toFixed","overview","Suspense","fallback","path","element","API_KEY","BASE_URL","getTrending","axios","res","data","id","getMovieInfoWithParams","param","getSearchMovie","query"],"sourceRoot":""}