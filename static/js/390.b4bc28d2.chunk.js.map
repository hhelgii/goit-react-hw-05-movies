{"version":3,"file":"static/js/390.b4bc28d2.chunk.js","mappings":"gNAiCA,UA9Ba,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACd,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAQA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uGACOC,EAAAA,EAAAA,IAAuBN,EAAS,WADvC,gBACRE,EADQ,EACRA,KACRC,EAAQD,GAFQ,2CAAH,qDAIfG,GACD,GAAE,CAACL,IAEFE,IACE,iCACE,wBACKA,EAAKK,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACf,OACE,yBACE,uBAAIA,KADGD,EAIZ,MAEY,IAAhBN,EAAKQ,SAAgB,uBAAG,wCAIhC,C","sources":["components/cast/Cast.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { getMovieInfoWithParams } from 'services/api';\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    const fetchCast = async () => {\n      const { cast } = await getMovieInfoWithParams(movieId, 'credits');\n      setCast(cast);\n    };\n    fetchCast();\n  }, [movieId]);\n  return (\n    cast && (\n      <>\n        <ul>\n            {cast.map(({ id, name }) => {\n              return (\n                <li key={id}>\n                  <p>{name}</p>\n                </li>\n              );\n            })}\n        </ul>\n        {cast.length === 0 && <p>We don't have cast for this movie</p>}\n      </>\n    )\n  );\n};\nCast.propTypes = {\n  movieId: propTypes.oneOfType([propTypes.string, propTypes.number]).isRequired,\n};\n\nexport default Cast;\n"],"names":["movieId","useState","cast","setCast","useEffect","fetchCast","getMovieInfoWithParams","map","id","name","length"],"sourceRoot":""}