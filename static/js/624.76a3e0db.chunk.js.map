{"version":3,"file":"static/js/624.76a3e0db.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/movieDetails.module.css?d9a6","pages/MovieDetailsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsPage\":\"movieDetails_movieDetailsPage__3yn5q\",\"movieDetails\":\"movieDetails_movieDetails__DRqLT\",\"info\":\"movieDetails_info__55z-x\",\"infoItem\":\"movieDetails_infoItem__zW7G8\",\"label\":\"movieDetails_label__XNQuj\",\"value\":\"movieDetails_value__v4fK9\",\"backdrop\":\"movieDetails_backdrop__PYgjL\",\"backdropImg\":\"movieDetails_backdropImg__zW898\"};","import { lazy, Suspense } from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { Route, Routes, useLocation, useParams, Link } from 'react-router-dom';\nimport { Loader } from 'components/loader/Loader';\nimport { getMovieInfo } from 'services/api';\n\nimport css from './movieDetails.module.css';\nconst Cast = lazy(() => import('../components/cast/Cast'));\nconst Reviews = lazy(() => import('../components/reviews/Reviews'));\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieId = async () => {\n      try {\n        const movieInfo = await getMovieInfo(movieId);\n        setMovie(movieInfo);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMovieId();\n  }, [movieId]);\n  const getNames = arr => {\n    const namesArr = arr.map(item => item.name);\n    return namesArr.join(', ');\n  };\n\n  return (\n    movie && (\n      <div className={css.movieDetailsPage}>\n        <Link to={backLinkHref.current}>Go back</Link>\n\n        <div className={css.movieDetails}>\n          <div className={css.info}>\n            <h1>{movie.title}</h1>\n            <p className={css.overview}>{movie.overview}</p>\n            <div className={css.infoItem}>\n              <span className={css.label}>Released:</span>\n              <span className={css.value}>\n                {movie.release_date.split('-').join('.')}\n              </span>\n            </div>\n            <div className={css.infoItem}>\n              <span className={css.label}>Rating:</span>\n              <span className={css.value}>{movie.vote_average.toFixed(1)}</span>\n            </div>\n            <div className={css.infoItem}>\n              <span className={css.label}>Coutry:</span>\n              <span className={css.value}>\n                {getNames(movie.production_countries)}\n              </span>\n            </div>\n            <div className={css.infoItem}>\n              <span className={css.label}>Genre:</span>\n              <span className={css.value}>{getNames(movie.genres)}</span>\n            </div>\n            <div className={css.infoItem}>\n              <span className={css.label}>Companies:</span>\n              <span className={css.value}>\n                {getNames(movie.production_companies)}\n              </span>\n            </div>\n            <div className={css.infoItem}>\n              <span className={css.label}>Runtime:</span>\n              <span className={css.value}>{`${movie.runtime}m`}</span>\n            </div>\n          </div>\n\n          <div className={css.backdrop}>\n            <img\n              src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n              alt=\"Backdrop\"\n              className={css.backdropImg}\n            />\n          </div>\n        </div>\n\n        <div>\n          <Link to={`cast`}>Cast</Link>\n          <Link to={`reviews`}>Reviews</Link>\n\n          <Suspense fallback={<Loader />}>\n            <Routes>\n              <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n              <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n            </Routes>\n          </Suspense>\n        </div>\n      </div>\n    )\n  );\n};\nexport default MovieDetails;\n"],"names":["Cast","lazy","Reviews","useState","movie","setMovie","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchMovieId","getMovieInfo","movieInfo","console","log","message","getNames","arr","map","item","name","join","className","css","to","current","title","overview","release_date","split","vote_average","toFixed","production_countries","genres","production_companies","runtime","src","backdrop_path","alt","Suspense","fallback","Loader","path","element"],"sourceRoot":""}