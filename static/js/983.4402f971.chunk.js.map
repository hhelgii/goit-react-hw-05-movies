{"version":3,"file":"static/js/983.4402f971.chunk.js","mappings":"2MAGaA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MACNC,GAASC,EAAAA,EAAAA,MACf,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMJ,GAA1C,UACE,uBAAID,OAIX,ECMD,EAfyB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACxB,OACI,wBACKA,EAAOC,KAAI,SAAAT,GACR,OAAQ,SAACD,EAAD,CAAWC,MAAOA,GAAYA,EAAMC,GAC/C,KAGZ,C,yGCaD,UAtBe,WACX,OAAsCS,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAqBC,EAArB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAC,8GAESC,EAAAA,EAAAA,MAFT,OAEJP,EAFI,OAGdI,EAAgBJ,EAAOQ,SAHT,gDAKVC,QAAQC,IAAI,KAAMC,SALR,yDAAD,qDAQjBL,GACH,GAAE,KAGC,iCACA,wBAAI,kBACHH,IAAc,SAAC,IAAD,CAAWH,OAAQG,MAGzC,C,uKCvBKS,EAAQ,mCACRC,EAAS,+BAER,SAAeN,IAAtB,4CAAO,OAAP,oBAAO,oGACaO,EAAAA,EAAAA,IAAA,UAAaD,EAAb,uCAAoDD,IADjE,cACGG,EADH,yBAGIA,EAAIC,MAHR,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BxB,GAA5B,uFACaqB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BpB,EAA/B,oBAA6CmB,IAD1D,cACGG,EADH,yBAEIA,EAAIC,MAFR,kEAIA,SAAeE,EAAtB,iDAAO,OAAP,oBAAO,WAAsCzB,EAAI0B,GAA1C,uFACaL,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BpB,EAA/B,YAAqC0B,EAArC,oBAAsDP,IADnE,cACGG,EADH,yBAGIA,EAAIC,MAHR,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACaP,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iCAA8CD,EAA9C,kBAA+DS,IAD5E,cACGN,EADH,yBAEIA,EAAIC,MAFR,kE","sources":["components/moviesList/MoviesItem.jsx","components/moviesList/MoviesList.jsx","pages/HomePage.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport propTypes from 'prop-types';\nexport const MovieItem = ({ movie }) => {\n  const { id, title } = movie;\n  const location=useLocation();\n  return (\n    <li>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <p>{title}</p>\n      </Link>\n    </li>\n  );\n};\nMovieItem.propTypes = {\n  movie: propTypes.shape({\n    id: propTypes.number.isRequired,\n    title: propTypes.string.isRequired,\n  }),\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { MovieItem } from './MoviesItem';\n\nexport const MovieList = ({ movies }) => {\n    return (\n        <ul>\n            {movies.map(movie => {\n                return (<MovieItem movie={movie} key={movie.id} />)\n            })}\n        </ul>\n    );\n}\n\n\nMovieList.propTypes = {\n    movies: propTypes.array.isRequired,\n};\n\nexport default MovieList;\n","import React, { useEffect, useState } from \"react\";\nimport MovieList from \"components/moviesList/MoviesList\";\nimport { getTrending } from \"services/api\";\nconst HomePage=()=>{\n    const [trendyMovies, setTrendyMovies]=useState([])\n   \n    useEffect(()=>{\n        const fetchTrends=async()=>{\n            try {\n                const movies=await getTrending()\n            setTrendyMovies(movies.results)\n            } catch (error) {\n                console.log(error.message)\n            }\n        }\n        fetchTrends()\n    }, [])\n    // console.log(trendyMovies)\n    return (\n        <>\n        <h1>Trendy Movies</h1>\n        {trendyMovies&&<MovieList movies={trendyMovies}/>}\n        </>\n    )\n}\nexport default HomePage","import axios from \"axios\";\nconst API_KEY='41b8f9437bf3f899281f8a3f9bdc0891'\nconst BASE_URL='https://api.themoviedb.org/3'\n\nexport async function getTrending(){\n    const res=await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    \n    return res.data\n}\nexport async function getMovieInfo(id){\n    const res=await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`)\n    return res.data\n}\nexport async function getMovieInfoWithParams(id, param){\n    const res=await axios.get(`${BASE_URL}/movie/${id}/${param}?api_key=${API_KEY}`)\n    \n    return res.data\n    \n}\nexport async function getSearchMovie(query){\n    const res=await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`)\n    return res.data\n\n}"],"names":["MovieItem","movie","id","title","location","useLocation","to","state","from","movies","map","useState","trendyMovies","setTrendyMovies","useEffect","fetchTrends","getTrending","results","console","log","message","API_KEY","BASE_URL","axios","res","data","getMovieInfo","getMovieInfoWithParams","param","getSearchMovie","query"],"sourceRoot":""}