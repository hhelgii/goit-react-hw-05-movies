{"version":3,"file":"static/js/744.f62414fd.chunk.js","mappings":"2MAGaA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MACNC,GAASC,EAAAA,EAAAA,MACf,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMJ,GAA1C,UACE,uBAAID,OAIX,ECMD,EAfyB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACxB,OACI,wBACKA,EAAOC,KAAI,SAAAT,GACR,OAAQ,SAACD,EAAD,CAAWC,MAAOA,GAAYA,EAAMC,GAC/C,KAGZ,C,8ICVYS,EAAK,SAAC,GAAc,IAAbC,EAAY,EAAZA,SAOhB,OACI,kBAAMA,SAPS,SAAAC,GACfA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAASC,YAAYC,MAAMC,OAClDR,EAASG,GACTF,EAAEG,OAAOK,OACZ,EAEG,WACI,kBAAOC,KAAK,cAAcC,KAAK,UAC/B,mBAAQA,KAAK,SAAb,SAAsB,aAGjC,E,SCgBD,EA1BmB,WACjB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMb,EAAQY,EAAaE,IAAI,SAc7B,OARFC,EAAAA,EAAAA,YAAU,WACHf,IAEL,iBAAC,qGACmBgB,EAAAA,EAAAA,IAAehB,GADlC,OACOiB,EADP,OAECP,EAAUO,EAAIC,SAFf,0CAAD,EAID,GAAE,CAAClB,KAEE,iCACA,wBAAI,kBACJ,SAACJ,EAAD,CAAMC,SAhBQ,SAAAG,GAClB,GAAc,KAAVA,EAAc,OAAOmB,QAAQC,IAAI,mBACrCP,EAAgB,CAAEb,MAAAA,GACnB,IAcMN,IAAQ,SAAC,IAAD,CAAWA,OAAQA,IAC3BM,GAA2B,IAAlBN,EAAO2B,SAAgB,uBAAG,mBAG3C,C,uKC7BKC,EAAQ,mCACRC,EAAS,+BAER,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACaC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uCAAoDD,IADjE,cACGL,EADH,yBAGIA,EAAIS,MAHR,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BxC,GAA5B,uFACasC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BpC,EAA/B,oBAA6CmC,IAD1D,cACGL,EADH,yBAEIA,EAAIS,MAFR,kEAIA,SAAeE,EAAtB,iDAAO,OAAP,oBAAO,WAAsCzC,EAAI0C,GAA1C,uFACaJ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BpC,EAA/B,YAAqC0C,EAArC,oBAAsDP,IADnE,cACGL,EADH,OAEHE,QAAQC,IAAIH,EAAIS,MAFb,kBAGIT,EAAIS,MAHR,kEAMA,SAAeV,EAAtB,+CAAO,OAAP,oBAAO,WAA8BhB,GAA9B,uFACayB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iCAA8CD,EAA9C,kBAA+DtB,IAD5E,cACGiB,EADH,yBAEIA,EAAIS,MAFR,kE","sources":["components/moviesList/MoviesItem.jsx","components/moviesList/MoviesList.jsx","components/form/Form.jsx","pages/MoviesPage.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport propTypes from 'prop-types';\nexport const MovieItem = ({ movie }) => {\n  const { id, title } = movie;\n  const location=useLocation();\n  return (\n    <li>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <p>{title}</p>\n      </Link>\n    </li>\n  );\n};\nMovieItem.propTypes = {\n  movie: propTypes.shape({\n    id: propTypes.number.isRequired,\n    title: propTypes.string.isRequired,\n  }),\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { MovieItem } from './MoviesItem';\n\nexport const MovieList = ({ movies }) => {\n    return (\n        <ul>\n            {movies.map(movie => {\n                return (<MovieItem movie={movie} key={movie.id} />)\n            })}\n        </ul>\n    );\n}\n\n\nMovieList.propTypes = {\n    movies: propTypes.array.isRequired,\n};\n\nexport default MovieList;\n","import React from 'react';\nimport propTypes from 'prop-types';\nexport const Form=({onSubmit})=>{\n    const handleSubmit=e=>{\n        e.preventDefault();\n        const query = e.target.elements.searchInput.value.trim();\n        onSubmit(query);\n        e.target.reset()\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input name=\"searchInput\" type=\"text\"></input>\n            <button type='submit'>search</button>\n        </form>\n    )\n}\nForm.propTypes={\n    onSubmit:propTypes.func.isRequired\n}","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovie } from 'services/api';\nimport { Form } from 'components/form/Form';\nimport MovieList from 'components/moviesList/MoviesList';\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const setNewQuery = query => {\n    if (query === '') return console.log('Type something!');\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    if (!query) return;\n\n    (async () => {\n      const res = await getSearchMovie(query);\n      setMovies(res.results);\n    })();\n  }, [query]);\n    return (\n        <>\n        <h1>Found Movies</h1>\n        <Form onSubmit={setNewQuery}/>\n        {movies&&<MovieList movies={movies}/>}\n        {query && movies.length === 0 && <p>Nothig Found</p>}\n        </>\n    )\n};\nexport default MoviesPage\n","import axios from \"axios\";\nconst API_KEY='41b8f9437bf3f899281f8a3f9bdc0891'\nconst BASE_URL='https://api.themoviedb.org/3'\n\nexport async function getTrending(){\n    const res=await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    \n    return res.data\n}\nexport async function getMovieInfo(id){\n    const res=await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`)\n    return res.data\n}\nexport async function getMovieInfoWithParams(id, param){\n    const res=await axios.get(`${BASE_URL}/movie/${id}/${param}?api_key=${API_KEY}`)\n    console.log(res.data)\n    return res.data\n    \n}\nexport async function getSearchMovie(query){\n    const res=await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`)\n    return res.data\n\n}"],"names":["MovieItem","movie","id","title","location","useLocation","to","state","from","movies","map","Form","onSubmit","e","preventDefault","query","target","elements","searchInput","value","trim","reset","name","type","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","getSearchMovie","res","results","console","log","length","API_KEY","BASE_URL","getTrending","axios","data","getMovieInfo","getMovieInfoWithParams","param"],"sourceRoot":""}