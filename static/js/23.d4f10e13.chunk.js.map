{"version":3,"file":"static/js/23.d4f10e13.chunk.js","mappings":"8MAoCA,UAjCgB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,uGACSC,EAAAA,EAAAA,IAAuBN,EAAS,WADzC,gBACTO,EADS,EACTA,QACRC,QAAQC,IAAIF,GACZJ,EAAWI,GAHM,2CAAH,qDAKhBF,GACD,GAAE,CAACL,IAEFE,IACE,iCACE,wBACKA,EAAQQ,KAAI,YAA+B,IAA5BC,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,QAC1B,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EAMZ,MAEe,IAAnBT,EAAQY,SAAgB,uBAAG,2CAInC,C","sources":["components/reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport { getMovieInfoWithParams } from 'services/api';\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    const fetReviews = async () => {\n      const { results } = await getMovieInfoWithParams(movieId, 'reviews');\n      console.log(results)\n      setReviews(results)\n    };\n    fetReviews()\n  }, [movieId]);\n  return (\n    reviews && (\n      <>\n        <ul>\n            {reviews.map(({ id, author, content  }) => {\n              return (\n                <li key={id}>\n                  <h4>{author}</h4>\n                  <p>{content}</p>\n\n                </li>\n              );\n            })}\n        </ul>\n        {reviews.length === 0 && <p>We don't have reviews for this movie</p>}\n      </>\n    )\n  );\n};\nReviews.propTypes = {\n  movieId: propTypes.oneOfType([propTypes.string, propTypes.number]).isRequired,\n};\n\nexport default Reviews;\n"],"names":["movieId","useState","reviews","setReviews","useEffect","fetReviews","getMovieInfoWithParams","results","console","log","map","id","author","content","length"],"sourceRoot":""}